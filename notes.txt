Admin Credentials:
admin@gmail.com
ankur
intex123

pip freeze > requirements.txt
bootstrap-5
pip install django-bootstrap-v5

python .\manage.py dbshell
-----------------------------------------------------------------------------------------------
What Is Model Inheritance in Django?
https://www.makeuseof.com/django-model-inheritance/

How To Set Up Django with Postgres, Nginx, and Gunicorn on Ubuntu
https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu

Django Admin ManyToManyField
https://stackoverflow.com/questions/8043881/django-admin-manytomanyfield

Creating Multiple User Types and Implementing Login Signup with Email instead of Username in Django
https://medium.com/@sowmendipta/creating-multiple-user-types-and-implementing-login-signup-with-email-instead-of-username-in-django-63a47be0e1af
-----------------------------------------------------------------------------------------------
Way1:
$(document).ready(function(event) {
		$('#submitButton').click(function(event) {
			// Prevent default form submission
			event.preventDefault();
	
			// Check if form fields are empty
			var name = $('#name').val();
			var email = $('#email_id').val();
			var subject = $('#subject').val();
			var message = $('#message').val();
			if (name === '' || email === '' || subject === '' || message === '') {
				//console.log("One or more fields are empty"); // Log if any field is empty
				$('#successMessage').delay(2000).text("One or more fields are empty").show().fadeOut('slow');
				// Show error message or handle empty fields
				return; // Exit function to prevent further execution
			}
			// Create formData object
			var formData = new FormData($('#myForm')[0]);
			console.log("Form Data:", formData); // Log formData
			// Send AJAX request
			$.ajax({
				url: "{% url 'contactform' %}", 
				type: 'POST',
				data: formData,
				contentType: false, // Set content type to avoid automatic processing by browser
				processData: false, // Prevent jQuery from processing data
				success: function(response) {
					// Show success message
					$('#successMessage').delay(2000).text(response.message).show().fadeOut('slow');
					// Clear form fields
					$('#myForm')[0].reset();
				},
				error: function(xhr, status, error) {
					console.error("Error:", xhr.responseText); // Log error response
					// Show error message or handle error
				}
			});
		});
	});
Way 2:
$(document).ready(function() {
    $('#submitButton').click(function(event) {
        // Prevent default form submission
        event.preventDefault();

        // Serialize form data
        var formData = new FormData($('#myForm')[0]);
        console.log("Form Data:", formData); // Log formData

        // Check if form data is empty
        if (!formData.entries().next().value) {
            console.log("Form Data is empty"); // Log if formData is empty
            // Show error message or handle empty form data
            return; // Exit function to prevent further execution
        }

        // Send AJAX request
        $.ajax({
            url: "{% url 'contactform' %}", 
            type: 'POST',
            data: formData,
			contentType: false, // Set content type to avoid automatic processing by browser
      		processData: false, // Prevent jQuery from processing data
            success: function(response) {
                console.log("Success:", response); // Log success response
                // Show success message
                $('#successMessage').delay(2000).text(response.message).show().fadeOut('slow');
                // Clear form fields
                $('#myForm')[0].reset();
            },
            error: function(xhr, status, error) {
                console.error("Error:", xhr.responseText); // Log error response
                // Show error message or handle error
            }
        });
    });
});
-----------------------------------------------------------------------------------------------
$(document).ready(function () {
    $('#submitButton').click(function (event) {
        event.preventDefault();
        /* var first_name = $('#id_first_name').val();
        var last_name = $('#id_last_name').val();
        var email = $('#id_email').val();
        var date_of_birth = $('#id_date_of_birth').val();
        var password1 = $('#id_password1').val();
        var password2 = $('#id_password2').val();
        var role = $('#role').val(); */
        var formData = $('#myForm').serialize();
        $.ajax({
         url: "{% url 'register' %}", 
         type: 'POST',
         data: formData,
         success: function(response) {
             //console.log("Success:", response); // Log success response
             // Show success message
             $('#successMessage').delay(2000).text(response.message).show().fadeOut('slow');
             // Clear form fields
             $('#myForm')[0].reset();
         },
         error: function(xhr, status, error) {
             console.error("Error:", xhr.responseText); // Log error response
             // Show error message or handle error
         }
     });
    });
  });
<div class="row">
<div class="col-12"><div id="successMessage" class="alert alert-success" role="alert" style="display: none;"></div>
    <button type="button" class="btn btn-secondary" style="float:right;" data-bs-toggle="modal" data-bs-target="#borrowModal">
        Create Borrower 
    </button>
</div>